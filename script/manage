#!/usr/bin/env python

"""
REIS installation manager
"""

import sh
from os import environ
from os.path import expanduser
from sys import argv, exit

# config
STOW_PACKAGE = 'aire'
PACKAGES = [
    # main packages
    "i3-gaps",
    "i3lock-color",
    "polybar",
    "kitty",
    "rofi",
    "dunst",
    "picom-tryone-git",
    "nitrogen",
    "feh",
    "sxiv",
    "xdotool",
    "betterlockscreen",
    # fonts
    "otf-overpass",
    "nerd-fonts-iosevka",
    "ttc-iosevka-sparkle",
    # util
    "unclutter",
    "xautolock",
    "mpc",
    "playerctl",
    "pass",
    # scripting
    "ruby",
    "python-dbus",
    "python-sh",
    "python-gobject",
]


def is_command(prg):
    status = sh.bash(c=f"command -v {prg}", _out="/dev/null").exit_code
    return status == 0


def ensure(prg):
    if not is_command(prg):
        exit(f"ERROR: {prg} is not available.")


ensure("pacman")
ensure("stow")
ensure("git")
if not is_command("yay"):
    # yay not installed, install it
    with sh.contrib.sudo:
        sh.pacman("-S", "yay")

# check subcommand
if len(argv) <= 1:
    print("no action specified.")
    print("usage: manage <action>")
    exit(2)
COMMAND = argv[1]


from sh import stow
restow = stow.bake('-v', '-R', '-t', environ.get('HOME'))
unstow = stow.bake('-v', '-D', '-t', environ.get('HOME'))

def install_deps():
    from sh import yay

    yay_install = yay.bake("-S", "--needed", _fg=True)

    print("installing packages...")
    yay_install(PACKAGES)


def stow_configs():
    print("stowing configs")
    restow(STOW_PACKAGE)

def unstow_configs():
    print("unstowing configs")
    unstow(STOW_PACKAGE)

if COMMAND == "install_deps":
    install_deps()
if COMMAND == "install_configs":
    stow_configs()
if COMMAND == "install":
    install_deps()
    stow_configs()
if COMMAND == "uninstall":
    unstow_configs()
